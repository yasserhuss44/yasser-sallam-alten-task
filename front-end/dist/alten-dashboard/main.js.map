{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/dashboard/dashboard.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {DashBoardComponent}from './dashboard/dashboard.component';\nconst routes: Routes = [\n   { path: 'dashboard', component: DashBoardComponent },\n   { path: '', component: DashBoardComponent },\n   { path: '',   redirectTo: '/dashboard',   pathMatch: 'full'\n },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { DashBoardComponent } from './dashboard/dashboard.component';\nimport {DashBoardService} from './dashboard/dashboard.service' ;\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\nimport { FormsModule } from '@angular/forms'; // <-- NgModel lives here\nimport { NgxLoadingModule } from 'ngx-loading';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashBoardComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    AngularFontAwesomeModule,\n    NgxLoadingModule.forRoot({})\n  ],\n  providers: [DashBoardService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".card-block-shadow{\\r\\n  padding:15px;box-shadow: 5px 5px #a29696; border-style:outset\\r\\n}\\r\\n.active-card-block-shadow{\\r\\n  padding:15px;box-shadow: 5px 5px #5eb46a; border-style:outset\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYSw0QkFBNEIsQ0FBQyxtQkFBbUI7Q0FDOUQ7QUFDRDtFQUNFLGFBQWEsNEJBQTRCLENBQUMsbUJBQW1CO0NBQzlEIiwiZmlsZSI6InNyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmQtYmxvY2stc2hhZG93e1xyXG4gIHBhZGRpbmc6MTVweDtib3gtc2hhZG93OiA1cHggNXB4ICNhMjk2OTY7IGJvcmRlci1zdHlsZTpvdXRzZXRcclxufVxyXG4uYWN0aXZlLWNhcmQtYmxvY2stc2hhZG93e1xyXG4gIHBhZGRpbmc6MTVweDtib3gtc2hhZG93OiA1cHggNXB4ICM1ZWI0NmE7IGJvcmRlci1zdHlsZTpvdXRzZXRcclxufSJdfQ== */\"","module.exports = \"<div class=\\\"py-5\\\">\\r\\n    <div class=\\\"container-fluid\\\" style=\\\"padding-left:10px;margin-top:-40px\\\">\\r\\n\\r\\n\\r\\n        <div class=\\\"card-block\\\" (keydown)=\\\"keyDownFunction($event)\\\">\\r\\n            <div class=\\\"card-header\\\">\\r\\n\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-8 col-md-6\\\">\\r\\n                        <input type=\\\"text\\\" style=\\\"margin:15px\\\" [(ngModel)]=\\\"searchTag\\\" class=\\\"form-control\\\" placeholder=\\\"Search in every thing\\\" />\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-3 col-md-2\\\">\\r\\n                        <input type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"search()\\\" value=\\\"Search\\\" style=\\\"margin-top:15px;margin-left:10px\\\" /> </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row col-md-12 hidden-md-up\\\">\\r\\n    <!-- <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '3px' }\\\" [template]=\\\"customLoadingTemplate\\\"></ngx-loading> -->\\r\\n\\r\\n            <div class=\\\"card col-md-3\\\" *ngFor=\\\"let hero of heroes.itemsList\\\" style=\\\"margin-top:15px;border-style:none\\\">\\r\\n        \\r\\n                <div  class=\\\"card-block\\\" [ngClass]=\\\"hero.vehicle.isConnected?'active-card-block-shadow':'card-block-shadow'\\\">\\r\\n                    <fa *ngIf=\\\"hero.vehicle.isConnected\\\" name=\\\"truck\\\" size=\\\"2x\\\" style=\\\"color:green\\\"></fa>\\r\\n                    <fa *ngIf=\\\"!hero.vehicle.isConnected\\\" name=\\\"truck\\\" size=\\\"2x\\\" style=\\\"color:gray\\\"></fa>\\r\\n                    <fa *ngIf=\\\"hero.vehicle.isConnected\\\" name=\\\"check\\\" class=\\\"pull-right\\\" size=\\\"2x\\\" style=\\\"color:green\\\"></fa>\\r\\n\\r\\n                    <h4 class=\\\"card-title\\\" style=\\\"text-align:center\\\">{{ hero.vehicle.regNumber }}</h4>\\r\\n                    <h6 class=\\\"card-subtitle text-muted\\\">VehicleId: {{ hero.vehicle.vehicleId }}</h6>\\r\\n                    <br/>\\r\\n                    <fa name=\\\"user\\\" *ngIf=\\\"hero.vehicle.isConnected\\\" size=\\\"2x\\\" style=\\\"color:green\\\"></fa>\\r\\n                    <fa name=\\\"user\\\" *ngIf=\\\"!hero.vehicle.isConnected\\\" size=\\\"2x\\\" style=\\\"color:gray\\\"></fa>\\r\\n\\r\\n                    <h6 class=\\\"card-text p-y-1\\\">Owner Name: {{hero.customer.name}}</h6>\\r\\n                    <h6 class=\\\"card-text p-y-1\\\">Address: {{hero.customer.address}}</h6>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <br>\\r\\n    </div>\\r\\n</div>\"","import { Component } from '@angular/core';\r\nimport { DashBoardService } from './dashboard.service';\r\nimport { ResponseDetailsResult, VehicleSearch } from './dashboard.models';\r\nimport { interval, timer, observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators'\r\nimport  'rxjs/Observable';\r\nimport {take} from 'rxjs/operators';  \r\n@Component({\r\n  selector: 'dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashBoardComponent {\r\n  title = 'Customer Vehicles Dashboard';\r\n  constructor(private dashboardService: DashBoardService) { }\r\n  heroes: ResponseDetailsResult = { itemsList: [] };\r\n  searchTag = \"\";\r\n  public loading = false;\r\n  ngOnInit() {\r\n    this.loadAllVehicles();\r\n  }\r\n  loadAllVehicles(): void {\r\n    \r\n    this.loading = true;\r\n    this.dashboardService.search(this.searchTag).subscribe(heroes => {\r\n      //console.table(heroes.itemsList);\r\n      this.heroes = heroes\r\n      this.loading = false;\r\n      this.refreshData();\r\n    });\r\n  }\r\n  refreshData() {\r\n    timer(0, 1000).pipe(\r\n      take(5)).subscribe(x=>{\r\n        this.loading = true;\r\n        this.dashboardService.search(this.searchTag).subscribe(heroes => {\r\n          //console.table(heroes.itemsList);\r\n          this.heroes = heroes\r\n          this.loading = false;\r\n          //this.refreshData();\r\n        });\r\n       });   \r\n  }\r\n  search(): void {\r\n    this.loadAllVehicles();\r\n  }\r\n\r\n  keyDownFunction($event: any): void {\r\n    if (event[\"keyCode\"] == 13) {\r\n      this.loadAllVehicles();\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n// import { Injectable } from '@angular/core';\r\n// import { HttpClient } from '@angular/common/http';\r\n// import { Client } from '../model/client.model';\r\n\r\n// @Injectable()\r\n// export class ClientService {\r\n//   constructor(private http: HttpClient) { }\r\n//   url = 'http://localhost:8080/api/clients';\r\n\r\n//   getAll() {\r\n//     return this.http.get<Client[]>(this.url);\r\n//   }\r\n\r\n//   getById(id: number) {\r\n//     return this.http.get<Client>(this.url + '/' + id);\r\n//   }\r\n\r\n//   create(Client: Client) {\r\n//     return this.http.post(this.url, Client);\r\n//   }\r\n\r\n//   update(Client: Client) {\r\n//     return this.http.put(this.url + '/' + Client.id, Client);\r\n//   }\r\n\r\n//   delete(id: number) {\r\n//     return this.http.delete(this.url + '/' + id);\r\n//   }\r\n// }","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n import {ResponseDetailsResult,VehicleSearch} from './dashboard.models'\r\n@Injectable({\r\nprovidedIn: 'root',\r\n})\r\nexport class DashBoardService {\r\n \r\nconstructor(private http: HttpClient) { }\r\n\r\n    public search(search): Observable<any> {\r\n         if(search=='')\r\n         search='all' ;\r\n        return this.http.get(`https://alten-customer-apis.azurewebsites.net/api/customer/GetAllVehicles/${search}`);\r\n         \r\n    }\r\n} \r\n \r\n ","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}